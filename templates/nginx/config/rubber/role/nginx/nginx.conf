<%
  @path = "/etc/nginx/nginx.conf"
  @post = "mkdir -p #{rubber_env.nginx_log_dir}"
%>

user www-data;
worker_processes 10;

pid /var/run/nginx.pid;

events
{
  worker_connections 1024;
}

http
{
  include           /etc/nginx/mime.types;
  default_type      application/octet-stream;

  sendfile          on;
  tcp_nopush        on;
  tcp_nodelay       off;

  gzip              on;
  gzip_http_version 1.0;
  gzip_comp_level   2;
  gzip_proxied      any;
  gzip_types        text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  # configure log format like to Apache's "combined" log format
  log_format        main
                      '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_cookie"';

  # Curious: nginx does not appear to have any way to filter sensitive information out of its access logs.
  # In order to avoid recording passwords sent as GET paramters via JSONP requests to aysnc_signup
  # and async_login, we use a special log format that simply filters out the entire request string.
  # (A regexp that only removed the password paramter would be better, but I haven't found any docs 
  # explaining how to scrub individual parts out of the access log without using the nginx lua module,
  # which we don't have installed.)
  log_format        filter_parameters
                      '$remote_addr - $remote_user [$time_local] '
                      '"[FILTERED]" $status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_cookie"';

  # default log files
  error_log         <%= rubber_env.nginx_log_dir %>/error.log notice;
  access_log        <%= rubber_env.nginx_log_dir %>/access.log main;

  include /etc/nginx/rubber/*.conf;
}
